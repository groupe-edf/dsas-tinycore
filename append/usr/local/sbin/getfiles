#! /bin/sh

#### FIXME : Temporary directories for testing
haut=/home/tc/dsas/test/haut

# Default options
symantec_uri="ftp://noeysep3.noe.edf.fr//IntelligentUpdater/SEP14/"
symantec_dir=symantec

# Can have several centos repos. The format is 
#    "<name1>|<repo1> <name2>|<repo2>"
# where any whitespace characters other than the one 
# seperating, repositories must be escaped ou HTML
# encoded
centos_repos="7.7|http://debian.pleiade.edf.fr/sipsir/distributions/centos/7Server/x86_64/7.7/os"
centos_dir=centos

fileargs() {
while [ "$#" -gt 3 ]; do
  shift 3
  echo $1
  shift 1
done
}

symantec() {
  # Download the directory contents of the symantec repository     
  dirlist=$(curl $symantec_uri 2> /dev/null)
  files=$(fileargs $dirlist) 

  # Remove files locally that are no longer available sur le URI
  for localfile in $(ls -1 $haut/$symantec_dir); do
    if [[ "$files" != *"$localfile"* ]]; then
      echo "Removing stale file: $localfile"
      rm $haut/$symantec_dir/$localfile
    fi
  done

  # Download the missing files
  for file in $files; do                  
    if [ ! -f "$haut/$symantec_dir/$file" ]; then
      echo "Downloading file: $file"
      $(umask 007 && curl -o $haut/$symantec_dir/$file $symantec_uri$file 2> /dev/null)                       
    fi
  done
}

# Usage : check_checksum <file> <chksum> <type>
check_checksum() {
  _file=$1
  _chksum=$2
  _chktype=$3

  case $_chktype in
    sha)
      chk=$(cat $_file | sha1sum - | sed -e "s/ -$//g")
      ;;
    md5)
      chk=$(cat $_file | md5sum - | sed -e "s/ -$//g")
      ;;
    *)
     return 0
     ;;
  esac

  if [ $chk != $_chksum ]; then
    return 0 
  fi
  return 1
}

get_packages() {
  dest=$1
  shift
  while [ "$#" -gt 2 ]; do
    if [ ${1: -3} == "rpm" ]; then
      file=$1
      chktype=$2
      chksum=$3
    else
     file=$3
     chktype=$1
     chksum=$2
    fi
    if [ -f "$dest/$file" ]; then
      if  check_checksum $dest/$file $chksum $chktype; then
        # Checksum of file is different redownload the file
        echo "Downloading file $file [Checksum different!!]"
        $(umask 007 && curl --create-dirs -o $dest/$file $uri/$file 2> /dev/null)  
      else
        echo "Skipping file $file"
      fi
    else
      echo "Downloading file $file"
      $(umask 007 && curl --create-dirs -o $dest/$file $uri/$file 2> /dev/null)  
    fi
    shift 3
  done
}

centos() {

  # Download the repomd.xml file for the repo
  for repo in $centos_repos; do
    name=$(echo $repo | cut -d\| -f1)
    uri=$(echo $repo | cut -d\| -f2)
    echo "Downloading repodata/repomd.xml from Centos $name"
    $(umask 007 && curl --create-dirs -o $haut/$centos_dir/$name/repodata/repomd.xml $uri/repodata/repomd.xml 2> /dev/null)  
    $(umask 007 && curl --create-dirs -o $haut/$centos_dir/$name/repodata/repomd.xml.asc $uri/repodata/repomd.xml.asc 2> /dev/null)  

    # Identify the primary file list and download it
    # Note that we have to ignore the xml namespace (initial cat/sed)
    filelist=$(cat $haut/$centos_dir/$name/repodata/repomd.xml | sed -e "s:repomd xmlns:repomd ignore:g" | xmllint --xpath 'string(//repomd/data[@type="primary"]/location/@href)' - ) 
    echo "Downloading primary file list $filelist for Centos $name"
    $(umask 007 && curl --create-dirs -o $haut/$centos_dir/$name/$filelist $uri/$filelist 2> /dev/null)  

    # Verify its checksum
    chksum=$(cat $haut/$centos_dir/$name/repodata/repomd.xml | sed -e "s:repomd xmlns:repomd ignore:g" | xmllint --xpath 'string(//repomd/data[@type="primary"]/checksum)' - ) 
    chktype=$(cat $haut/$centos_dir/$name/repodata/repomd.xml | sed -e "s:repomd xmlns:repomd ignore:g" | xmllint --xpath 'string(//repomd/data[@type="primary"]/checksum/@type)' - ) 
    if  check_checksum $haut/$centos_dir/$name/$filelist $chksum $chktype; then
      2>1 echo "Error verifiying checksum of $filelist"
      continue
    fi

    # Unzip and verify the checksum of primary.xml
    chksum=$(cat $haut/$centos_dir/$name/repodata/repomd.xml | sed -e "s:repomd xmlns:repomd ignore:g" | xmllint --xpath 'string(//repomd/data[@type="primary"]/open-checksum)' - ) 
    chktype=$(cat $haut/$centos_dir/$name/repodata/repomd.xml | sed -e "s:repomd xmlns:repomd ignore:g" | xmllint --xpath 'string(//repomd/data[@type="primary"]/open-checksum/@type)' - ) 
    unzipfile=$(echo $filelist | sed -e "s/.gz//g")
    gunzip -k -f $haut/$centos_dir/$name/$filelist
    if  check_checksum $haut/$centos_dir/$name/$unzipfile $chksum $chktype; then 
      2>1 echo "Error verifiying checksum of $unzipfile"                         
      continue                                                                  
    fi                                                                          
    
    # Recover a table of the hashtype, hash and file names 
    filetable=$(cat $haut/$centos_dir/$name/$unzipfile | sed -e "s/xmlns=/ignore=/g" | xmllint --xpath '//package[@type="rpm"]/location | //package[@type="rpm"]/checksum' - | sed -e 's:.*href="\(.*\)"/>$:\1:g' -e 's:.*type="\([^"]*\)"[^>]*>\([0-9a-fA-F]*\)</checksum>:\1 \2:g')

    # Remove the files in our tree not listed in primary.xml
    for _file in $(cd $haut/$centos_dir/$name; find . -path ./repodata -prune -false -o -type f); do
      if [[ "$filetable*" != *"${_file:2}"* ]]; then
        echo "Removing stale file ${_file:2}" 
        rm $haut/$centos_dir/$name/${_file:2}
      fi
    done

    # Download the packages
    get_packages $haut/$centos_dir/$name $filetable
  done
}

while [ "$#" -gt 0 ]; do
  case $1 in
    symantec) symantec ;;
    centos) centos ;;
    *) 2>1 echo "Unknown command"; exit 1 ;;
  esac
  shift
done
