_pkg=busybox
_version=1.36.1
_uri="https://busybox.net/downloads/busybox-1.36.1.tar.bz2"
_extra_uri="$tcz_src/busybox/busybox-1.27.1-wget-make-default-timeout-configurable.patch \
            $tcz_src/busybox/busybox-1.29.3_root_path.patch \
            $tcz_src/busybox/busybox-1.33.0_modprobe.patch \
            $tcz_src/busybox/busybox-1.33.0_tc_depmod.patch \
            $tcz_src/busybox/busybox-1.36.1_config_suid \
            $tcz_src/busybox/busybox-1.36.1_config_nosuid"
_dep="Linux-PAM"
_build_dep="compiletc Linux-PAM-dev sstrip curl libssh2 linux-6.12_api_headers"
_pkg_path="busybox-1.36.1"
_pre_config=\
"cd $builddir/$_pkg_path
for file2 in $_extra_uri; do
  [[ \"\$file2\" = \*.patch ]] || continue
  file=\$(basename \$file2)
  echo Applying the patch \$file
  if \$(grep -q '+++ b/' \$file); then
    patch -Np1 -i \$file
  else
    patch -Np0 -i \$file
  fi
done

# Make a copy of source as will build twice
mkdir $builddir/$_pkg_path.nosuid
tar -cf - * | tar -xpC $builddir/$_pkg_path.nosuid -f -
chown -R tc:staff $builddir/$_pkg_path.nosuid
 
# Config for SUID version of busybox
mv busybox-1.36.1_config_suid .config

# Allow TMOUT in ash
sed -i -e 's/^# CONFIG_ASH_IDLE_TIMEOUT.*/CONFIG_ASH_IDLE_TIMEOUT=y/' .config
# Use PAM
sed -i -e 's/^# CONFIG_PAM.*/CONFIG_PAM=y/' .config
# Remove support of NFS/CIFS from mount as RPC support dropped in glibc >= 2.32
sed -i -e 's/CONFIG_FEATURE_MOUNT_NFS=y/CONFIG_FEATURE_MOUNT_NFS=n/' .config
sed -i -e 's/CONFIG_FEATURE_MOUNT_CIFS=y/CONFIG_FEATURE_MOUNT_CIFS=n/' .config
chown tc:staff .config

# Config for NOSUID version of busybox
cd $builddir/$_pkg_path.nosuid
mv $builddir/$_pkg_path/busybox-1.36.1_config_nosuid .config

# Allow TMOUT in ash
sed -i -e 's/^# CONFIG_ASH_IDLE_TIMEOUT.*/CONFIG_ASH_IDLE_TIMEOUT=y/' .config
# Use PAM
sed -i -e 's/^# CONFIG_PAM.*/CONFIG_PAM=y/' .config
# Remove support of NFS/CIFS from mount as RPC support dropped in glibc >= 2.32
sed -i -e 's/CONFIG_FEATURE_MOUNT_NFS=y/CONFIG_FEATURE_MOUNT_NFS=n/' .config
sed -i -e 's/CONFIG_FEATURE_MOUNT_CIFS=y/CONFIG_FEATURE_MOUNT_CIFS=n/' .config

chown tc:staff .config
"
_conf_cmd="setarch linux64 make oldconfig; cd $builddir/$_pkg_path.nosuid; setarch linux64 make oldconfig"
_make_cmd=\
"make CC='gcc -flto -Os -pipe' CXX='g++ -flto -Os -pipe -fno-exceptions -fno-rtti'
cd $builddir/$_pkg_path.nosuid
make CC='gcc -flto -Os -pipe' CXX='g++ -flto -Os -pipe -fno-exceptions -fno-rtti'"
_install_cmd="
busybox_install() {
make install CC='gcc -flto -Os -pipe' CXX='g++ -flto -Os -pipe -fno-exceptions -fno-rtti' CONFIG_PREFIX=\$1
# Mv busybox and all its links to busybox.suid
cd \$1
mv bin/busybox bin/busybox.suid
chmod u+s bin/busybox.suid
for file in \$(find . -type l); do
  case \$(dirname \$file) in
   ./bin)
     rm \$file
     ln -s busybox.suid \$file
     ;;
   ./sbin)
     rm \$file
     ln -s ../bin/busybox.suid \$file
     ;;
   ./usr/bin)
     rm \$file
     ln -s ../../bin/busybox.suid \$file
     ;;
   *)
     echo 'FAIL IN BUSYBOX LINK'
     exit 1
    ;;
  esac
done
cd $builddir/$_pkg_path.nosuid
make install CC='gcc -flto -Os -pipe' CXX='g++ -flto -Os -pipe -fno-exceptions -fno-rtti' CONFIG_PREFIX=\$1
}
busybox_install "
_post_build=""
_pkgs="main{bin,sbin,usr}"
_post_install=\
"cd /lib
ln -s /usr/local/lib/libpam.so.0
ln -s /usr/local/lib/libpam_misc.so.0"
